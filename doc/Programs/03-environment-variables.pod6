=begin pod

=TITLE Shell environment variables used by the interpreter

=SUBTITLE What variables you can declare to alter its behavior.

Rakudo's behavior can be tweaked by a (growing) number of environment variables;
this section attempts to document all those currently in use.

=head2 Module Loading


=item C<RAKUDOLIB>, C<PERL6LIB> Appends a comma-delimited list of paths to C<@INC>. C<RAKUDOLIB> is evaluated first.

=item C<RAKUDO_MODULE_DEBUG> Causes the module loader to print debugging
information to standard error.

=head2 Error Message Verbosity and Strictness

=item C<RAKUDO_NO_DEPRECATIONS>

If true, suppresses deprecation warnings triggered by the C<is DEPRECATED> trait.

=item C<RAKUDO_DEPRECATIONS_FATAL>

If true, deprecation warnings become thrown exceptions.

=item C<RAKUDO_VERBOSE_STACKFRAME>

Displays source code in stack frames surrounded by the specified number of lines of context.

=item C<RAKUDO_BACKTRACE_SETTING>

Controls whether .setting files are included in backtraces.

=back

=head2 Affecting Precompilation

=item C<RAKUDO_PREFIX>

When this is set, Rakudo will look for the standard repositories (perl, vendor, site) in the
specified directory. This is intended as an escape hatch for build-time bootstrapping issues,
where Rakudo may be built as an unprivileged user without write access to the runtime paths
in NQP's config.

=item C<RAKUDO_PRECOMP_DIST>, C<RAKUDO_PRECOMP_LOADING> C<RAKUDO_PRECOMP_WITH>: These are internal variables for passing serialized state to precompilation jobs in child processes. Please do not set them manually.


=head2 Other

=item C<RAKUDO_ERROR_COLOR> Controls whether to emit ANSI codes for error
highlighting. Defaults to true if unset, except on Win32.

=item C<RAKUDO_MAX_THREADS>

Override the default maximum number of threads used by a thread pool.

=item C<TMPDIR>, C<TEMP>, C<TMP>

The C<IO::Spec::Unix.tmpdir> method will return C<$TMPDIR> if it points to a directory with full
access permissions for the current user, with a fallback default of C<'/tmp'>.

C<IO::Spec::Cygwin> and C<IO::Spec::Win32> use more Win32-appropriate lists which also include the
C<%TEMP%> and C<%TMP%> environment variables.

=item C<PATH>, C<Path> The C<IO::Spec::Unix.path> method splits C<$PATH> as a
shell would; i.e. as a colon-separated list. C<IO::Spec::Cygwin> inherits this
from C<IO::Spec::Unix>. C<IO::Spec::Win32.path> will read the first defined of
either C<%PATH%> or C<%Path%> as a semicolon-delimited list.

=item C<RAKUDO_SNAPPER> affects the period in which the telemetry snapper
activates.

=head1 AUTHORS

Initial version written by the Rakudo contributors, see the
L<CREDITS file|https://github.com/rakudo/rakudo/blob/master/CREDITS>.

The L<initial version of this manual page|https://github.com/rakudo/rakudo/blob/master/docs/running.pod>
was written by Reini Urban, Moritz Lenz and the Rakudo
contributors.

=end pod

# vim: expandtab softtabstop=4 shiftwidth=4 ft=perl6
