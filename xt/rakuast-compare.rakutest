#!/usr/bin/env raku

use Test;
use lib $*PROGRAM.parent(2).child('lib');
use Test-Files;
use File::Temp;

=begin overview

For all raku docs, compare output from RAKUAST and old --doc.

To see the changes between current and new rendering as a diff, run as:

    RAKUDO_AST_DOCS=v xt/rakuast-compare.rakutest

And optionally specify a single file to restrict the output

=end overview

my @files = Test-Files.pods;
plan +@files;

for @files -> $file {

    %*ENV<RAKUDO_RAKUAST>="";
    my $old = "";
    my $job = Proc::Async.new($*EXECUTABLE-NAME, '--doc', $file);
    $job.stdout.tap(-> $buf {$old ~= $buf});
    $job.stderr.tap({;});

    my $has-error = ! await $job.start;
    if $has-error {
       flunk "Error occurred caching $file old school";
       next;
    }

    %*ENV<RAKUDO_RAKUAST>="1";
    my $new = "";
    $job = Proc::Async.new($*EXECUTABLE-NAME, '--doc', $file);
    $job.stdout.tap(-> $buf {$new ~= $buf});
    $job.stderr.tap({;});

    $has-error = ! await $job.start;
    if $has-error {
        flunk "Error occurred caching $file new school";
        next;
    }

    ok $old eq $new, "$file contents match";
    if %*ENV<RAKUDO_AST_DOCS>:exists && %*ENV<RAKUDO_AST_DOCS> eq "v" {
        my ($old_fname, $old_io) = tempfile;
        $old_io.spurt: $old;
        my ($new_fname, $new_io) = tempfile;
        $new_io.spurt: $new;
        run('diff', '-u', $old_fname, $new_fname);
    }
}
